---
- name: Print massage from master
  ansible.builtin.debug:
    msg:
    - "Running on {{ hostvars[inventory_hostname].tags.Name }}"
    
- name: installing jenkins 1/7
  become: true
  shell: sudo apt-get update -y

- name: installing jenkins 2/7
  become: true
  shell: sudo apt install docker.io -y

- name: installing jenkins 3/7
  become: true
  shell: sudo systemctl start docker

- name: installing jenkins 4/7
  become: true
  shell: sudo usermod -aG docker ubuntu

- name: installing jenkins 5/7
  become: true
  shell: mkdir -p /home/ubuntu/jenkins_home

- name: installing jenkins 6/7
  become: true
  shell: sudo chown -R 1000:1000 /home/ubuntu/jenkins_home

- name: installing jenkins 7/7
  become: true
  shell: sudo docker run -d --restart=always -p 8080:8080 -p 50000:50000 --env JENKINS_ADMIN_ID=admin --env JENKINS_ADMIN_PASSWORD=Banana321! dvaturi/jenkins-srv:latest

- name: Copy github ssh key to known hosts on jenkins server 1/1
  become: true
  shell: sudo ssh-keyscan github.com | tee -a ~/.ssh/known_hosts

- name: installing aws cli 1/1
  become: true
  shell: sudo apt-get install awscli -y

- name: installing kubectl 1/2
  become: true
  shell: curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.23.17/bin/linux/amd64/kubectl

- name: installing kubectl 2/2
  become: true
  shell: sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

- name: connecting jenkins server as service to consul server 
  become: true
  shell: |
    CONSUL_VERSION="1.8.5"
    PRIVATE_IP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
    apt-get -yqq install unzip dnsmasq
    cat << EODMCF >/etc/dnsmasq.d/10-consul
    # Enable forward lookup of the 'consul' domain:
    server=/consul/127.0.0.1#8600
    EODMCF
    systemctl restart dnsmasq
    cat << EOF >/etc/systemd/resolved.conf
    [Resolve]
    DNS=127.0.0.1
    Domains=~consul
    EOF
    systemctl restart systemd-resolved.service
    cd /tmp
    curl -sLo consul.zip https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip
    unzip consul.zip
    chmod +x consul
    mv consul /usr/local/bin/consul
    mkdir -p /opt/consul
    mkdir -p /etc/consul.d
    mkdir -p /run/consul
    tee /etc/consul.d/config.json > /dev/null <<EOF
    {
      "advertise_addr": "$PRIVATE_IP",
      "data_dir": "/opt/consul",
      "datacenter": "kandula",
      "encrypt": "uDBV4e+LbFW3019YKPxIrg==",
      "disable_remote_exec": true,
      "disable_update_check": true,
      "leave_on_terminate": true,
      "retry_join": ["provider=aws tag_key=consul_server tag_value=true"],
      "enable_script_checks": true,
      "server": false
    }
    EOF
    useradd consul
    chown -R consul:consul /opt/consul /etc/consul.d /run/consul
    tee /etc/systemd/system/consul.service > /dev/null <<"EOF"
    [Unit]
    Description=Consul service discovery agent
    Requires=network-online.target
    After=network.target
    [Service]
    User=consul
    Group=consul
    PIDFile=/run/consul/consul.pid
    Restart=on-failure
    Environment=GOMAXPROCS=2
    ExecStart=/usr/local/bin/consul agent -pid-file=/run/consul/consul.pid -config-dir=/etc/consul.d
    ExecReload=/bin/kill -s HUP $MAINPID
    KillSignal=SIGINT
    TimeoutStopSec=5
    [Install]
    WantedBy=multi-user.target
    EOF
    systemctl daemon-reload
    systemctl enable consul.service
    systemctl start consul.service
    tee /etc/consul.d/jenkins_master.json > /dev/null <<"EOF"
    {
      "service": {
        "id": "jenkins-8080",
        "name": "jenkins",
        "tags": ["jenkins"],
        "port": 80,
        "checks": [
          {
            "id": "tcp",
            "name": "TCP on port 8080",
            "tcp": "localhost:8080",
            "interval": "10s",
            "timeout": "1s"
          },
          {
            "id": "http",
            "name": "HTTP on port 8080",
            "http": "http://localhost:8080/",
            "interval": "30s",
            "timeout": "1s"
          },
          {
            "id": "service",
            "name": "docker service",
            "args": ["systemctl", "status", "docker.service"],
            "interval": "60s"
          }
        ]
      }
    }
    EOF
    systemctl stop consul.service
    systemctl start consul.service
