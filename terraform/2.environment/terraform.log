[0m[1mdata.aws_ami.ubuntu-18: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vpc_module.data.aws_availability_zones.available: Reading...[0m[0m
[0m[1mmodule.vpc_module.data.aws_availability_zones.available: Read complete after 0s [id=us-east-2][0m
[0m[1mdata.aws_availability_zones.available: Read complete after 0s [id=us-east-2][0m
[0m[1mdata.aws_ami.ubuntu-18: Read complete after 0s [id=ami-0a029e6f47affbaec][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # data.aws_instance.bastion_private_ips[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_instance" "bastion_private_ips" {
      [32m+[0m[0m ami                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m associate_public_ip_address = (known after apply)
      [32m+[0m[0m availability_zone           = (known after apply)
      [32m+[0m[0m credit_specification        = (known after apply)
      [32m+[0m[0m disable_api_stop            = (known after apply)
      [32m+[0m[0m disable_api_termination     = (known after apply)
      [32m+[0m[0m ebs_block_device            = (known after apply)
      [32m+[0m[0m ebs_optimized               = (known after apply)
      [32m+[0m[0m enclave_options             = (known after apply)
      [32m+[0m[0m ephemeral_block_device      = (known after apply)
      [32m+[0m[0m host_id                     = (known after apply)
      [32m+[0m[0m host_resource_group_arn     = (known after apply)
      [32m+[0m[0m iam_instance_profile        = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m instance_id                 = (known after apply)
      [32m+[0m[0m instance_state              = (known after apply)
      [32m+[0m[0m instance_tags               = (known after apply)
      [32m+[0m[0m instance_type               = (known after apply)
      [32m+[0m[0m ipv6_addresses              = (known after apply)
      [32m+[0m[0m key_name                    = (known after apply)
      [32m+[0m[0m maintenance_options         = (known after apply)
      [32m+[0m[0m metadata_options            = (known after apply)
      [32m+[0m[0m monitoring                  = (known after apply)
      [32m+[0m[0m network_interface_id        = (known after apply)
      [32m+[0m[0m outpost_arn                 = (known after apply)
      [32m+[0m[0m password_data               = (known after apply)
      [32m+[0m[0m placement_group             = (known after apply)
      [32m+[0m[0m placement_partition_number  = (known after apply)
      [32m+[0m[0m private_dns                 = (known after apply)
      [32m+[0m[0m private_dns_name_options    = (known after apply)
      [32m+[0m[0m private_ip                  = (known after apply)
      [32m+[0m[0m public_dns                  = (known after apply)
      [32m+[0m[0m public_ip                   = (known after apply)
      [32m+[0m[0m root_block_device           = (known after apply)
      [32m+[0m[0m secondary_private_ips       = (known after apply)
      [32m+[0m[0m security_groups             = (known after apply)
      [32m+[0m[0m source_dest_check           = (known after apply)
      [32m+[0m[0m subnet_id                   = (known after apply)
      [32m+[0m[0m tags                        = (known after apply)
      [32m+[0m[0m tenancy                     = (known after apply)
      [32m+[0m[0m user_data                   = (known after apply)
      [32m+[0m[0m user_data_base64            = (known after apply)
      [32m+[0m[0m vpc_security_group_ids      = (known after apply)
    }

[1m  # data.aws_instance.bastion_private_ips[1][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_instance" "bastion_private_ips" {
      [32m+[0m[0m ami                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m associate_public_ip_address = (known after apply)
      [32m+[0m[0m availability_zone           = (known after apply)
      [32m+[0m[0m credit_specification        = (known after apply)
      [32m+[0m[0m disable_api_stop            = (known after apply)
      [32m+[0m[0m disable_api_termination     = (known after apply)
      [32m+[0m[0m ebs_block_device            = (known after apply)
      [32m+[0m[0m ebs_optimized               = (known after apply)
      [32m+[0m[0m enclave_options             = (known after apply)
      [32m+[0m[0m ephemeral_block_device      = (known after apply)
      [32m+[0m[0m host_id                     = (known after apply)
      [32m+[0m[0m host_resource_group_arn     = (known after apply)
      [32m+[0m[0m iam_instance_profile        = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m instance_id                 = (known after apply)
      [32m+[0m[0m instance_state              = (known after apply)
      [32m+[0m[0m instance_tags               = (known after apply)
      [32m+[0m[0m instance_type               = (known after apply)
      [32m+[0m[0m ipv6_addresses              = (known after apply)
      [32m+[0m[0m key_name                    = (known after apply)
      [32m+[0m[0m maintenance_options         = (known after apply)
      [32m+[0m[0m metadata_options            = (known after apply)
      [32m+[0m[0m monitoring                  = (known after apply)
      [32m+[0m[0m network_interface_id        = (known after apply)
      [32m+[0m[0m outpost_arn                 = (known after apply)
      [32m+[0m[0m password_data               = (known after apply)
      [32m+[0m[0m placement_group             = (known after apply)
      [32m+[0m[0m placement_partition_number  = (known after apply)
      [32m+[0m[0m private_dns                 = (known after apply)
      [32m+[0m[0m private_dns_name_options    = (known after apply)
      [32m+[0m[0m private_ip                  = (known after apply)
      [32m+[0m[0m public_dns                  = (known after apply)
      [32m+[0m[0m public_ip                   = (known after apply)
      [32m+[0m[0m root_block_device           = (known after apply)
      [32m+[0m[0m secondary_private_ips       = (known after apply)
      [32m+[0m[0m security_groups             = (known after apply)
      [32m+[0m[0m source_dest_check           = (known after apply)
      [32m+[0m[0m subnet_id                   = (known after apply)
      [32m+[0m[0m tags                        = (known after apply)
      [32m+[0m[0m tenancy                     = (known after apply)
      [32m+[0m[0m user_data                   = (known after apply)
      [32m+[0m[0m user_data_base64            = (known after apply)
      [32m+[0m[0m vpc_security_group_ids      = (known after apply)
    }

[1m  # aws_iam_instance_profile.consul-join[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "consul-join" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "consul-join"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "consul-join"
      [32m+[0m[0m tags_all    = (known after apply)
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # aws_iam_policy.consul-join[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "consul-join" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Allows Consul nodes to describe instances for joining."
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "consul-join"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = "ec2:DescribeInstances"
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id   = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # aws_iam_policy_attachment.consul-join[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy_attachment" "consul-join" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m name       = "consul-join"
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m roles      = [
          [32m+[0m[0m "consul-join",
        ]
    }

[1m  # aws_iam_role.consul-join[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "consul-join" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = ""
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "consul-join"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # aws_instance.bastion[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "bastion" {
      [32m+[0m[0m ami                                  = "ami-0a029e6f47affbaec"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "consul-join"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "opsschoolproject"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"    = "bastion-a"
          [32m+[0m[0m "Owner"   = "Dean Vaturi"
          [32m+[0m[0m "Purpose" = "opsschool-project"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"    = "bastion-a"
          [32m+[0m[0m "Owner"   = "Dean Vaturi"
          [32m+[0m[0m "Purpose" = "opsschool-project"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "a95082dc2329087b8ac1f04305e588a3b5cb40a4"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.bastion[1][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "bastion" {
      [32m+[0m[0m ami                                  = "ami-0a029e6f47affbaec"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "consul-join"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "opsschoolproject"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"    = "bastion-b"
          [32m+[0m[0m "Owner"   = "Dean Vaturi"
          [32m+[0m[0m "Purpose" = "opsschool-project"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"    = "bastion-b"
          [32m+[0m[0m "Owner"   = "Dean Vaturi"
          [32m+[0m[0m "Purpose" = "opsschool-project"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "a95082dc2329087b8ac1f04305e588a3b5cb40a4"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.consul_server[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "consul_server" {
      [32m+[0m[0m ami                                  = "ami-0a029e6f47affbaec"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "consul-join"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "opsschoolproject"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"          = "consul-server-a"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"          = "consul-server-a"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.consul_server[1][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "consul_server" {
      [32m+[0m[0m ami                                  = "ami-0a029e6f47affbaec"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "consul-join"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "opsschoolproject"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"          = "consul-server-b"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"          = "consul-server-b"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.consul_server[2][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "consul_server" {
      [32m+[0m[0m ami                                  = "ami-0a029e6f47affbaec"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "consul-join"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "opsschoolproject"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"          = "consul-server-c"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"          = "consul-server-c"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.jenkins_server[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "jenkins_server" {
      [32m+[0m[0m ami                                  = "ami-0a029e6f47affbaec"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "consul-join"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "opsschoolproject"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"          = "jenkins-server-a"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "false"
          [32m+[0m[0m "jenkins"       = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"          = "jenkins-server-a"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "false"
          [32m+[0m[0m "jenkins"       = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "da7996ec5b7142a6050c59426a2a4cfeb6e0805a"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.jenkins_slave[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "jenkins_slave" {
      [32m+[0m[0m ami                                  = "ami-0a029e6f47affbaec"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "consul-join"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "opsschoolproject"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"          = "jenkins-slave-a"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "false"
          [32m+[0m[0m "jenkins"       = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"          = "jenkins-slave-a"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "false"
          [32m+[0m[0m "jenkins"       = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "f5803087537508698a8b30cf020d85046449cc15"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.jenkins_slave[1][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "jenkins_slave" {
      [32m+[0m[0m ami                                  = "ami-0a029e6f47affbaec"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "consul-join"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "opsschoolproject"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"          = "jenkins-slave-b"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "false"
          [32m+[0m[0m "jenkins"       = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"          = "jenkins-slave-b"
          [32m+[0m[0m "Owner"         = "Dean Vaturi"
          [32m+[0m[0m "Purpose"       = "opsschool-project"
          [32m+[0m[0m "consul_server" = "false"
          [32m+[0m[0m "jenkins"       = "true"
          [32m+[0m[0m "kandula_app"   = "true"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "f5803087537508698a8b30cf020d85046449cc15"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_security_group.bastion_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bastion_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Allow ssh inbound traffic"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "bastion-access"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.consul_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "consul_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Allow ssh & consul inbound traffic"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "consul-access"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.jenkins_sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "jenkins_sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Allow ssh & jenkins inbound traffic"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "jenkins-access"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group_rule.allow_consul_ui_access_from_world[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "allow_consul_ui_access_from_world" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Allow consul UI access from the world"
      [32m+[0m[0m from_port                = 8500
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8500
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.allow_consul_ui_access_from_world2[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "allow_consul_ui_access_from_world2" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Allow consul UI access from the world"
      [32m+[0m[0m from_port                = 9100
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 9100
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.allow_http_from_world[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "allow_http_from_world" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Allow http from the world"
      [32m+[0m[0m from_port                = 80
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 80
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.bastion_outbound_anywhere[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "bastion_outbound_anywhere" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "allow outbound traffic to anywhere"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # aws_security_group_rule.bastion_ssh_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "bastion_ssh_access" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "allow ssh access from anywhere"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.consul_allow_all_inside_security_group[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "consul_allow_all_inside_security_group" {
      [32m+[0m[0m description              = "Allow all inside security group"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = true
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.consul_dns_tcp_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "consul_dns_tcp_access" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Allow Consul DNS access via TCP"
      [32m+[0m[0m from_port                = 8600
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8600
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.consul_dns_udp_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "consul_dns_udp_access" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Allow Consul DNS access via UDP"
      [32m+[0m[0m from_port                = 8600
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "udp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8600
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.consul_outbound_anywhere[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "consul_outbound_anywhere" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "allow outbound traffic to anywhere"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # aws_security_group_rule.consul_server_tcp_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "consul_server_tcp_access" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Allow Consul Server access via TCP"
      [32m+[0m[0m from_port                = 8300
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8300
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.consul_ssh_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "consul_ssh_access" {
      [32m+[0m[0m cidr_blocks              = (known after apply)
      [32m+[0m[0m description              = "allow ssh access from anywhere"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.consul_wan_udp_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "consul_wan_udp_access" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Allow Consul WAN access via UDP"
      [32m+[0m[0m from_port                = 8302
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "udp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8302
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.jenkins_http_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "jenkins_http_access" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "allow http from anywhere"
      [32m+[0m[0m from_port                = 8080
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8080
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.jenkins_https_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "jenkins_https_access" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "allow https from anywhere"
      [32m+[0m[0m from_port                = 443
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 443
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.jenkins_outbound_anywhere[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "jenkins_outbound_anywhere" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "allow outbound traffic to anywhere"
      [32m+[0m[0m from_port                = 0
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "-1"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 0
      [32m+[0m[0m type                     = "egress"
    }

[1m  # aws_security_group_rule.jenkins_ssh_access[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "jenkins_ssh_access" {
      [32m+[0m[0m cidr_blocks              = (known after apply)
      [32m+[0m[0m description              = "allow ssh access from anywhere"
      [32m+[0m[0m from_port                = 22
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 22
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.lan_serf_tcp[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "lan_serf_tcp" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Lan Serf"
      [32m+[0m[0m from_port                = 8301
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8301
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.lan_serf_udp[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "lan_serf_udp" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Lan Serf"
      [32m+[0m[0m from_port                = 8301
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "udp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8301
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # aws_security_group_rule.wan_self_tcp[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group_rule" "wan_self_tcp" {
      [32m+[0m[0m cidr_blocks              = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m description              = "Wan self"
      [32m+[0m[0m from_port                = 8302
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m protocol                 = "tcp"
      [32m+[0m[0m security_group_id        = (known after apply)
      [32m+[0m[0m security_group_rule_id   = (known after apply)
      [32m+[0m[0m self                     = false
      [32m+[0m[0m source_security_group_id = (known after apply)
      [32m+[0m[0m to_port                  = 8302
      [32m+[0m[0m type                     = "ingress"
    }

[1m  # module.vpc_module.aws_eip.eip[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "eip" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.vpc_module.aws_eip.eip[1][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "eip" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.vpc_module.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc_module.aws_nat_gateway.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m connectivity_type    = "public"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m network_interface_id = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m subnet_id            = (known after apply)
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.vpc_module.aws_nat_gateway.nat[1][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m connectivity_type    = "public"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m network_interface_id = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m subnet_id            = (known after apply)
      [32m+[0m[0m tags                 = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
    }

[1m  # module.vpc_module.aws_route.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_module.aws_route.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route" "private" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m nat_gateway_id         = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_module.aws_route.public[0m will be created
[0m  [32m+[0m[0m resource "aws_route" "public" {
      [32m+[0m[0m destination_cidr_block = "0.0.0.0/0"
      [32m+[0m[0m gateway_id             = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_id            = (known after apply)
      [32m+[0m[0m instance_owner_id      = (known after apply)
      [32m+[0m[0m network_interface_id   = (known after apply)
      [32m+[0m[0m origin                 = (known after apply)
      [32m+[0m[0m route_table_id         = (known after apply)
      [32m+[0m[0m state                  = (known after apply)
    }

[1m  # module.vpc_module.aws_route_table.route_tables[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route_tables" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_module.aws_route_table.route_tables[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route_tables" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_module.aws_route_table.route_tables[2][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "route_tables" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags             = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_module.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_module.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_module.aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_module.aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_module.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_module.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_module.aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.5.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_module.aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.6.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_module.aws_vpc.vpc[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_classiclink                   = (known after apply)
      [32m+[0m[0m enable_classiclink_dns_support       = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = (known after apply)
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Created_by" = "terraform"
          [32m+[0m[0m "Name"       = "opsschool-project-vpc"
          [32m+[0m[0m "Owner"      = "dean-vaturi"
          [32m+[0m[0m "Purpose"    = "opsschool-project"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Created_by" = "terraform"
          [32m+[0m[0m "Name"       = "opsschool-project-vpc"
          [32m+[0m[0m "Owner"      = "dean-vaturi"
          [32m+[0m[0m "Purpose"    = "opsschool-project"
        }
    }

[1mPlan:[0m 54 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m bastion_public_ips = [
      [32m+[0m[0m [90mnull[0m[0m,
      [32m+[0m[0m [90mnull[0m[0m,
    ]
  [32m+[0m[0m consul-servers     = [
      [32m+[0m[0m [90mnull[0m[0m,
      [32m+[0m[0m [90mnull[0m[0m,
      [32m+[0m[0m [90mnull[0m[0m,
    ]
[0m[1mmodule.vpc_module.aws_vpc.vpc: Creating...[0m[0m
[0m[1maws_iam_role.consul-join: Creating...[0m[0m
[0m[1maws_iam_policy.consul-join: Creating...[0m[0m
[0m[1maws_iam_policy.consul-join: Creation complete after 0s [id=arn:aws:iam::447072968892:policy/consul-join][0m
[0m[1maws_iam_role.consul-join: Creation complete after 0s [id=consul-join][0m
[0m[1maws_iam_policy_attachment.consul-join: Creating...[0m[0m
[0m[1maws_iam_instance_profile.consul-join: Creating...[0m[0m
[0m[1maws_iam_policy_attachment.consul-join: Creation complete after 0s [id=consul-join][0m
[0m[1maws_iam_instance_profile.consul-join: Creation complete after 0s [id=consul-join][0m
[0m[1mmodule.vpc_module.aws_vpc.vpc: Creation complete after 1s [id=vpc-0360ae228b8cbfe3a][0m
[0m[1mmodule.vpc_module.aws_route_table.route_tables[2]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_eip.eip[1]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table.route_tables[1]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table.route_tables[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_subnet.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_subnet.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_subnet.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_eip.eip[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_internet_gateway.igw: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_subnet.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table.route_tables[1]: Creation complete after 0s [id=rtb-0e8ceece4345a30c6][0m
[0m[1mmodule.vpc_module.aws_route_table.route_tables[0]: Creation complete after 0s [id=rtb-0782988959b2ef5ad][0m
[0m[1maws_security_group.bastion_sg: Creating...[0m[0m
[0m[1maws_security_group.jenkins_sg: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_internet_gateway.igw: Creation complete after 0s [id=igw-071946a8f91356b25][0m
[0m[1mmodule.vpc_module.aws_route_table.route_tables[2]: Creation complete after 0s [id=rtb-0fc39ff1a077eb5e3][0m
[0m[1maws_security_group.consul_sg: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route.public: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_eip.eip[1]: Creation complete after 0s [id=eipalloc-0e19655d378c00e16][0m
[0m[1mmodule.vpc_module.aws_eip.eip[0]: Creation complete after 0s [id=eipalloc-04d79097a2f1b5384][0m
[0m[1mmodule.vpc_module.aws_subnet.private[1]: Creation complete after 0s [id=subnet-0d657ce710bf9b68f][0m
[0m[1mmodule.vpc_module.aws_subnet.private[0]: Creation complete after 0s [id=subnet-045777816d53101c3][0m
[0m[1mmodule.vpc_module.aws_route_table_association.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table_association.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-02084567c16395bf4][0m
[0m[1mmodule.vpc_module.aws_route_table_association.private[1]: Creation complete after 1s [id=rtbassoc-0e0e9bf727d3b1aaf][0m
[0m[1mmodule.vpc_module.aws_route.public: Creation complete after 1s [id=r-rtb-0782988959b2ef5ad1080289494][0m
[0m[1maws_security_group.consul_sg: Creation complete after 2s [id=sg-0bb4daa54ac815ee2][0m
[0m[1maws_security_group.jenkins_sg: Creation complete after 2s [id=sg-079e2e03f354caa71][0m
[0m[1maws_security_group.bastion_sg: Creation complete after 2s [id=sg-0358167aeb014ab64][0m
[0m[1maws_instance.consul_server[1]: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_http_from_world: Creating...[0m[0m
[0m[1maws_instance.consul_server[2]: Creating...[0m[0m
[0m[1maws_instance.consul_server[0]: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_wan_udp_access: Creating...[0m[0m
[0m[1maws_security_group_rule.wan_self_tcp: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_server_tcp_access: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_outbound_anywhere: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_http_from_world: Creation complete after 0s [id=sgrule-3613746457][0m
[0m[1maws_security_group_rule.consul_allow_all_inside_security_group: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_outbound_anywhere: Creation complete after 0s [id=sgrule-4072734810][0m
[0m[1maws_security_group_rule.lan_serf_tcp: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_wan_udp_access: Creation complete after 1s [id=sgrule-586440765][0m
[0m[1maws_security_group_rule.allow_consul_ui_access_from_world2: Creating...[0m[0m
[0m[1maws_security_group_rule.wan_self_tcp: Creation complete after 1s [id=sgrule-1547403941][0m
[0m[1maws_security_group_rule.allow_consul_ui_access_from_world: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_server_tcp_access: Creation complete after 2s [id=sgrule-1125121250][0m
[0m[1maws_security_group_rule.consul_dns_udp_access: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_allow_all_inside_security_group: Creation complete after 2s [id=sgrule-1685867499][0m
[0m[1maws_security_group_rule.consul_dns_tcp_access: Creating...[0m[0m
[0m[1maws_security_group_rule.lan_serf_tcp: Creation complete after 2s [id=sgrule-2704097505][0m
[0m[1maws_security_group_rule.lan_serf_udp: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_consul_ui_access_from_world2: Creation complete after 2s [id=sgrule-3571218628][0m
[0m[1maws_security_group_rule.jenkins_https_access: Creating...[0m[0m
[0m[1maws_security_group_rule.jenkins_https_access: Creation complete after 1s [id=sgrule-1310910288][0m
[0m[1maws_security_group_rule.bastion_ssh_access: Creating...[0m[0m
[0m[1maws_security_group_rule.allow_consul_ui_access_from_world: Creation complete after 3s [id=sgrule-1518425013][0m
[0m[1maws_instance.jenkins_slave[0]: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_dns_udp_access: Creation complete after 2s [id=sgrule-3308348838][0m
[0m[1maws_instance.jenkins_slave[1]: Creating...[0m[0m
[0m[1maws_security_group_rule.bastion_ssh_access: Creation complete after 0s [id=sgrule-22362073][0m
[0m[1maws_instance.jenkins_server[0]: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_dns_tcp_access: Creation complete after 3s [id=sgrule-3154020158][0m
[0m[1maws_security_group_rule.jenkins_http_access: Creating...[0m[0m
[0m[1maws_security_group_rule.lan_serf_udp: Creation complete after 2s [id=sgrule-3756171897][0m
[0m[1maws_security_group_rule.jenkins_http_access: Creation complete after 0s [id=sgrule-3571330385][0m
[0m[1maws_security_group_rule.jenkins_outbound_anywhere: Creating...[0m[0m
[0m[1maws_security_group_rule.bastion_outbound_anywhere: Creating...[0m[0m
[0m[1maws_security_group_rule.jenkins_outbound_anywhere: Creation complete after 1s [id=sgrule-2936778294][0m
[0m[1maws_security_group_rule.bastion_outbound_anywhere: Creation complete after 1s [id=sgrule-888952809][0m
[0m[1mmodule.vpc_module.aws_subnet.public[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_subnet.public[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_subnet.public[1]: Creation complete after 11s [id=subnet-040b7c37c0a9aab31][0m
[0m[1mmodule.vpc_module.aws_subnet.public[0]: Creation complete after 11s [id=subnet-019b20fc28b7c4bd0][0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table_association.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table_association.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table_association.public[1]: Creation complete after 0s [id=rtbassoc-01c3d129e12217699][0m
[0m[1maws_instance.bastion[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route_table_association.public[0]: Creation complete after 0s [id=rtbassoc-0a47b6a2a5b1004a2][0m
[0m[1maws_instance.bastion[1]: Creating...[0m[0m
[0m[1maws_instance.consul_server[1]: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.consul_server[2]: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.consul_server[0]: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.jenkins_slave[0]: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.jenkins_slave[1]: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.jenkins_server[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.bastion[0]: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.bastion[1]: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.consul_server[1]: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.consul_server[2]: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.consul_server[0]: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.jenkins_slave[0]: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.jenkins_slave[1]: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.jenkins_server[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.bastion[0]: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.bastion[1]: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.consul_server[1]: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.consul_server[2]: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.consul_server[0]: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.bastion[1]: Creation complete after 21s [id=i-0917d380e67545933][0m
[0m[1maws_instance.jenkins_slave[0]: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.jenkins_slave[1]: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.jenkins_server[0]: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.jenkins_slave[0]: Creation complete after 31s [id=i-0450af6a517ee920e][0m
[0m[1maws_instance.jenkins_slave[1]: Creation complete after 32s [id=i-0dd606fdc1f1e10ea][0m
[0m[1maws_instance.jenkins_server[0]: Creation complete after 32s [id=i-0b7199accb80f77bc][0m
[0m[1maws_instance.consul_server[0]: Creation complete after 36s [id=i-0b5e7a8cc1cbabf06][0m
[0m[1maws_instance.consul_server[2]: Creation complete after 36s [id=i-0deed8b7807a122b9][0m
[0m[1maws_instance.consul_server[1]: Creation complete after 36s [id=i-066f36db774ac2dcc][0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.bastion[0]: Still creating... [30s elapsed][0m[0m
[0m[1maws_instance.bastion[0]: Creation complete after 32s [id=i-021ddf9ac4572fbf2][0m
[0m[1mdata.aws_instance.bastion_private_ips[1]: Reading...[0m[0m
[0m[1mdata.aws_instance.bastion_private_ips[0]: Reading...[0m[0m
[0m[1mdata.aws_instance.bastion_private_ips[0]: Read complete after 0s [id=i-021ddf9ac4572fbf2][0m
[0m[1mdata.aws_instance.bastion_private_ips[1]: Read complete after 0s [id=i-0917d380e67545933][0m
[0m[1maws_security_group_rule.jenkins_ssh_access: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_ssh_access: Creating...[0m[0m
[0m[1maws_security_group_rule.consul_ssh_access: Creation complete after 0s [id=sgrule-501890906][0m
[0m[1maws_security_group_rule.jenkins_ssh_access: Creation complete after 0s [id=sgrule-2364652455][0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[1]: Creation complete after 1m34s [id=nat-0a1de481569918d26][0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.vpc_module.aws_nat_gateway.nat[0]: Creation complete after 1m44s [id=nat-0026554754c6c562e][0m
[0m[1mmodule.vpc_module.aws_route.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc_module.aws_route.private[1]: Creation complete after 0s [id=r-rtb-0fc39ff1a077eb5e31080289494][0m
[0m[1mmodule.vpc_module.aws_route.private[0]: Creation complete after 0s [id=r-rtb-0e8ceece4345a30c61080289494][0m
[0m[1m[32m
Apply complete! Resources: 54 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mbastion_public_ips = [
  "3.14.247.243",
  "18.219.142.238",
]
consul-servers = [
  "ip-10-0-2-72.us-east-2.compute.internal",
  "ip-10-0-3-77.us-east-2.compute.internal",
  "ip-10-0-2-64.us-east-2.compute.internal",
]
